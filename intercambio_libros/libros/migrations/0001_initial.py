# Generated by Django 5.2 on 2025-06-13 19:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Intercambio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_solicitud",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de solicitud"
                    ),
                ),
                (
                    "fecha_intercambio",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de intercambio"
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("pendiente", "Pendiente"),
                            ("aceptado", "Aceptado"),
                            ("rechazado", "Rechazado"),
                            ("completado", "Completado"),
                        ],
                        default="pendiente",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                ("mensaje", models.TextField(blank=True, verbose_name="Mensaje")),
                (
                    "nombres_completos",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "dni_contacto",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "telefono_contacto",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "direccion_contacto",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "codigo_postal_contacto",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "pais_contacto",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "verbose_name": "Intercambio",
                "verbose_name_plural": "Intercambios",
                "ordering": ["-fecha_solicitud"],
            },
        ),
        migrations.CreateModel(
            name="Libro",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titulo", models.CharField(max_length=200, verbose_name="Título")),
                ("autor", models.CharField(max_length=100, verbose_name="Autor")),
                (
                    "isbn",
                    models.CharField(blank=True, max_length=20, verbose_name="ISBN"),
                ),
                ("genero", models.CharField(max_length=50, verbose_name="Género")),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("disponible", "Disponible"),
                            ("intercambiado", "Intercambiado"),
                            ("reservado", "Reservado"),
                        ],
                        default="disponible",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                (
                    "fecha_publicacion",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de publicación"
                    ),
                ),
                (
                    "portada",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="portadas/",
                        verbose_name="Portada",
                    ),
                ),
                (
                    "fecha_agregado",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de agregado"
                    ),
                ),
                (
                    "ubicacion",
                    models.CharField(max_length=100, verbose_name="Ubicación"),
                ),
            ],
            options={
                "verbose_name": "Libro",
                "verbose_name_plural": "Libros",
                "ordering": ["-fecha_agregado"],
            },
        ),
        migrations.CreateModel(
            name="Envio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("direccion", models.CharField(blank=True, max_length=255, null=True)),
                ("ciudad", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "codigo_postal",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "pais_destino",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "empresa_envio",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "numero_guia",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("fecha_envio", models.DateField(blank=True, null=True)),
                ("recibido", models.BooleanField(default=False)),
                ("fecha_recepcion", models.DateField(blank=True, null=True)),
                (
                    "celular_contacto",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("direccion_envio", models.TextField(blank=True, null=True)),
                (
                    "intercambio",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="libros.intercambio",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="intercambio",
            name="libro",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="intercambios",
                to="libros.libro",
                verbose_name="Libro",
            ),
        ),
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("ciudad", models.CharField(max_length=100)),
                ("direccion", models.CharField(max_length=200)),
                ("telefono", models.CharField(max_length=20)),
                (
                    "foto_perfil",
                    models.ImageField(blank=True, null=True, upload_to="usuarios/"),
                ),
                ("pais", models.CharField(blank=True, max_length=100, null=True)),
                ("biografia", models.TextField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        related_name="usuario_groups", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        related_name="usuario_permissions", to="auth.permission"
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name="libro",
            name="propietario",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="libros",
                to="libros.usuario",
                verbose_name="Propietario",
            ),
        ),
        migrations.AddField(
            model_name="intercambio",
            name="solicitante",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="solicitudes",
                to="libros.usuario",
                verbose_name="Solicitante",
            ),
        ),
        migrations.CreateModel(
            name="Comentario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("contenido", models.TextField(verbose_name="Contenido")),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de creación"
                    ),
                ),
                (
                    "libro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comentarios",
                        to="libros.libro",
                        verbose_name="Libro",
                    ),
                ),
                (
                    "autor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="libros.usuario",
                        verbose_name="Autor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comentario",
                "verbose_name_plural": "Comentarios",
                "ordering": ["-fecha_creacion"],
            },
        ),
    ]
